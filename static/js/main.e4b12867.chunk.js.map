{"version":3,"sources":["configs/firebase.js","components/FormPersonalDetails.js","components/FormContactDetails.js","components/FormEmployerDetails.js","components/Confirm.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","FormPersonalDetails","continue","e","preventDefault","props","nextStep","this","values","handleChange","style","width","Container","Box","display","flexDirection","p","m","bgcolor","TextField","required","marginBottom","label","variant","onChange","defaultValue","firstname","InputLabelProps","shrink","id","type","birthday","ssn","Button","disabled","color","href","onClick","Component","FormContactDetails","previous","prevStep","email","phone","address","city","alignItems","state","marginLeft","zip","alignContent","FormEmployerDetails","Select","labelId","minWidth","value","employed","MenuItem","employer_name","job_title","emp_phone","income","start_date","Confirm","get_connection","data","middlename","lastname","income_ext","database","ref","orderByChild","equalTo","once","then","snapshot","val","console","log","alert","push","setState","authenticated","catch","error","ListItem","ListItemText","primary","secondary","UserForm","step","input","target","search","window","location","foo","URLSearchParams","get","undefined","get_data","key","forEach","child","el","JSON","stringify","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mQAaAA,IAASC,cAVM,CACXC,OAAQ,0CACRC,WAAY,8CACZC,YAAa,qDACbC,UAAW,8BACXC,cAAe,0CACfC,kBAAmB,eACnBC,MAAM,8CAKeR,IAASS,YAA3B,IACQT,IAAf,ECZqBU,E,2MACjBC,SAAW,SAAAC,GACPA,EAAEC,iBACF,EAAKC,MAAMC,Y,wEAGL,IAAD,EAE4BC,KAAKF,MAA9BG,EAFH,EAEGA,OAAQC,EAFX,EAEWA,aAChB,OACI,kBAAC,WAAD,KACI,yBAAKC,MAAO,CAAEC,MAAO,SACjB,kBAACC,EAAA,EAAD,KACI,qDAGJ,kBAACC,EAAA,EAAD,CAAKC,QAAQ,OACTC,cAAc,SACdC,EAAG,EAAGC,EAAG,EACTC,QAAQ,oBACR,kBAACC,EAAA,EAAD,CACIC,UAAQ,EACRV,MAAO,CAAEW,aAAc,IACvBC,MAAM,aACNC,QAAQ,WACRC,SAAUf,EAAa,aACvBgB,aAAcjB,EAAOkB,UACrBC,gBAAiB,CACbC,QAAQ,KAEhB,kBAACT,EAAA,EAAD,CACIT,MAAO,CAAEW,aAAc,IACvBC,MAAM,cACNC,QAAQ,WACRC,SAAUf,EAAa,cACvBgB,aAAcjB,EAAOkB,UACrBC,gBAAiB,CACbC,QAAQ,KAEhB,kBAACT,EAAA,EAAD,CACIC,UAAQ,EACRV,MAAO,CAAEW,aAAc,IACvBC,MAAM,YACNC,QAAQ,WACRC,SAAUf,EAAa,YACvBgB,aAAcjB,EAAOkB,UACrBC,gBAAiB,CACbC,QAAQ,KAEhB,kBAACT,EAAA,EAAD,CACIC,UAAQ,EACRV,MAAO,CAAEW,aAAc,IACvBQ,GAAG,OACHC,KAAK,OACLR,MAAM,WACNC,QAAQ,WACRC,SAAUf,EAAa,YACvBgB,aAAcjB,EAAOuB,SACrBJ,gBAAiB,CACbC,QAAQ,KAIhB,kBAACT,EAAA,EAAD,CACIC,UAAQ,EACRV,MAAO,CAAEW,aAAc,IACvBC,MAAM,MACNC,QAAQ,WACRC,SAAUf,EAAa,OACvBgB,aAAcjB,EAAOwB,IACrBL,gBAAiB,CACbC,QAAQ,KAEhB,kBAACK,EAAA,EAAD,CACIC,UAAW1B,EAAOwB,IAClBtB,MAAO,CAAEW,aAAc,IACvBE,QAAQ,YACRY,MAAM,UACNC,KAAK,qBACLC,QAAS9B,KAAKL,UANlB,e,GAzEyBoC,aCA5BC,E,2MACjBrC,SAAW,SAAAC,GACPA,EAAEC,iBACF,EAAKC,MAAMC,Y,EAEfkC,SAAW,SAAArC,GACPA,EAAEC,iBACF,EAAKC,MAAMoC,Y,wEAGL,IAAD,EAE4BlC,KAAKF,MAA9BG,EAFH,EAEGA,OAAQC,EAFX,EAEWA,aAChB,OACI,kBAAC,WAAD,KACI,yBAAKC,MAAO,CAAEC,MAAO,SACjB,kBAACC,EAAA,EAAD,KACI,oDAEJ,kBAACC,EAAA,EAAD,CAAKC,QAAQ,OACTC,cAAc,SACdC,EAAG,EAAGC,EAAG,EACTC,QAAQ,oBACR,kBAACC,EAAA,EAAD,CACAC,UAAQ,EACJU,KAAK,QACLpB,MAAO,CAAEW,aAAc,IACvBC,MAAM,QACNC,QAAQ,WACRC,SAAUf,EAAa,SACvBgB,aAAcjB,EAAOkC,MACrBf,gBAAiB,CACbC,QAAQ,KAEhB,kBAACT,EAAA,EAAD,CACAC,UAAQ,EACJU,KAAK,MACLpB,MAAO,CAAEW,aAAc,IACvBC,MAAM,eACNC,QAAQ,WACRC,SAAUf,EAAa,SACvBgB,aAAcjB,EAAOmC,MACrBhB,gBAAiB,CACbC,QAAQ,KAEhB,kBAACT,EAAA,EAAD,CACIT,MAAO,CAAEW,aAAc,IACvBC,MAAM,UACNC,QAAQ,WACRC,SAAUf,EAAa,WACvBgB,aAAcjB,EAAOoC,QACrBjB,gBAAiB,CACbC,QAAQ,KAEhB,kBAACT,EAAA,EAAD,CACIT,MAAO,CAAEW,aAAc,IACvBC,MAAM,OACNC,QAAQ,WACRC,SAAUf,EAAa,QACvBgB,aAAcjB,EAAOqC,KACrBlB,gBAAiB,CACbC,QAAQ,KAEhB,kBAACf,EAAA,EAAD,CACIC,QAAQ,OACRgC,WAAW,SACX/B,cAAc,OACd,kBAACI,EAAA,EAAD,CACIT,MAAO,CAAEW,aAAc,IACvBC,MAAM,QACNC,QAAQ,WACRC,SAAUf,EAAa,SACvBgB,aAAcjB,EAAOuC,MACrBpB,gBAAiB,CACbC,QAAQ,KAEhB,kBAACT,EAAA,EAAD,CACIT,MAAO,CAAEW,aAAc,GAAI2B,WAAY,IACvC1B,MAAM,MACNC,QAAQ,WACRC,SAAUf,EAAa,OACvBgB,aAAcjB,EAAOyC,IACrBtB,gBAAiB,CACbC,QAAQ,MAIpB,kBAACf,EAAA,EAAD,CACIC,QAAQ,OACRoC,aAAa,SACbnC,cAAc,OACd,kBAACkB,EAAA,EAAD,CACIvB,MAAO,CAAEW,aAAc,IACvBE,QAAQ,YACRY,MAAM,UACNC,KAAK,qBACLC,QAAS9B,KAAKiC,UALlB,QAMA,kBAACP,EAAA,EAAD,CACAC,UAAW1B,EAAOmC,MACdjC,MAAO,CAAEW,aAAc,IACvBE,QAAQ,YACRY,MAAM,UACNC,KAAK,qBACLC,QAAS9B,KAAKL,UANlB,gB,GAjGoBoC,a,kBCA3Ba,E,2MACjBjD,SAAW,SAAAC,GACPA,EAAEC,iBACF,EAAKC,MAAMC,Y,EAEfkC,SAAW,SAAArC,GACPA,EAAEC,iBACF,EAAKC,MAAMoC,Y,wEAGL,IAAD,EAE4BlC,KAAKF,MAA9BG,EAFH,EAEGA,OAAQC,EAFX,EAEWA,aAChB,OACI,kBAAC,WAAD,KACI,yBAAKC,MAAO,CAAEC,MAAO,SACjB,kBAACC,EAAA,EAAD,KACI,wDAGJ,kBAACC,EAAA,EAAD,CAAKC,QAAQ,OACTC,cAAc,SACdC,EAAG,EAAGC,EAAG,EACTC,QAAQ,oBAER,kBAACL,EAAA,EAAD,CACIC,QAAQ,OACRgC,WAAW,SACX/B,cAAc,OAWd,kBAACqC,EAAA,EAAD,CACIC,QAAQ,2BACRxB,GAAG,qBACHN,QAAQ,WACRb,MAAO,CAAE4C,SAAU,KACnBC,MAAO/C,EAAOgD,SACdhC,SAAUf,EAAa,aAEvB,kBAACgD,EAAA,EAAD,CAAUF,MAAM,YAAhB,YACA,kBAACE,EAAA,EAAD,CAAUF,MAAM,iBAAhB,wBACA,kBAACE,EAAA,EAAD,CAAUF,MAAM,WAAhB,WACA,kBAACE,EAAA,EAAD,CAAUF,MAAM,SAAhB,UAGJ,kBAACpC,EAAA,EAAD,CACIT,MAAO,CAAEW,aAAc,GAAI2B,WAAY,IACvC1B,MAAM,gBACNC,QAAQ,WACRC,SAAUf,EAAa,iBACvBgB,aAAcjB,EAAOkD,cACrB/B,gBAAiB,CACbC,QAAQ,MAIpB,kBAACT,EAAA,EAAD,CACIW,KAAK,OACLpB,MAAO,CAAEW,aAAc,IACvBC,MAAM,YACNC,QAAQ,WACRC,SAAUf,EAAa,aACvBgB,aAAcjB,EAAOmD,UACrBhC,gBAAiB,CACbC,QAAQ,KAEhB,kBAACT,EAAA,EAAD,CACIW,KAAK,MACLpB,MAAO,CAAEW,aAAc,IACvBC,MAAM,eACNC,QAAQ,WACRC,SAAUf,EAAa,aACvBgB,aAAcjB,EAAOoD,UACrBjC,gBAAiB,CACbC,QAAQ,KAEhB,kBAACT,EAAA,EAAD,CACIT,MAAO,CAAEW,aAAc,IACvBC,MAAM,gBACNC,QAAQ,WACRC,SAAUf,EAAa,UACvBgB,aAAcjB,EAAOqD,OACrBlC,gBAAiB,CACbC,QAAQ,KAGhB,kBAACT,EAAA,EAAD,CACIT,MAAO,CAAEW,aAAc,IACvBQ,GAAG,OACHC,KAAK,OACLR,MAAM,aACNC,QAAQ,WACRC,SAAUf,EAAa,cACvBgB,aAAcjB,EAAOsD,WACrBnC,gBAAiB,CACbC,QAAQ,KAKhB,kBAACf,EAAA,EAAD,CACIC,QAAQ,OACRoC,aAAa,SACbnC,cAAc,OACd,kBAACkB,EAAA,EAAD,CACIvB,MAAO,CAAEW,aAAc,IACvBE,QAAQ,YACRY,MAAM,UACNC,KAAK,qBACLC,QAAS9B,KAAKiC,UALlB,QAMA,kBAACP,EAAA,EAAD,CACIvB,MAAO,CAAEW,aAAc,IACvBE,QAAQ,YACRY,MAAM,UACNC,KAAK,qBACLC,QAAS9B,KAAKL,UALlB,gB,GAtHqBoC,a,kBCA5ByB,E,2MACjB7D,SAAW,SAAAC,GACPA,EAAEC,iBAIF,EAAK4D,eAAe,EAAK3D,MAAMG,S,2HAMpByD,GAAO,IAAD,OAIbvC,EAAYuC,EAAKvC,UACjBwC,EAAaD,EAAKC,WAClBC,EAAWF,EAAKE,SAChBpC,EAAWkC,EAAKlC,SAChBC,EAAMiC,EAAKjC,IACXU,EAAQuB,EAAKvB,MACbC,EAAQsB,EAAKtB,MACbC,EAAUqB,EAAKrB,QACfC,EAAOoB,EAAKpB,KACZE,EAAQkB,EAAKlB,MACbE,EAAMgB,EAAKhB,IACXO,EAAWS,EAAKT,SAChBE,EAAgBO,EAAKP,cACrBC,EAAYM,EAAKN,UACjBC,EAAYK,EAAKL,UACjBC,EAASI,EAAKJ,OACdC,EAAaG,EAAKH,WAClBM,EAAaH,EAAKG,WAEtB7E,EACK8E,WACAC,IAAI,eACJC,aAAa,OACbC,QAAQxC,GACRyC,KAAK,SACLC,MAAK,SAAAC,GACEA,EAASC,OACTC,QAAQC,IAAI,cAEZC,MAAM,oBAINF,QAAQC,IAAI,uBACZvF,EACK8E,WACAC,IAAI,eACJU,KAAK,CACFtD,YACAwC,aACAC,WACApC,WACAC,MACAU,QACAC,QACAC,UACAC,OACAE,QACAE,MACAO,WACAE,gBACAC,YACAC,YACAC,SACAC,aACAM,eAEHM,MAAK,SAAAT,GACFY,QAAQC,IAAIb,GAIZ,EAAKgB,SAHU,CACXC,eAAe,IAGnBH,MAAM,gCAETI,OAAM,SAAAC,GACHP,QAAQC,IAAIM,GAEZL,MAAM,wBAIN,EAAKE,SAHU,CACXC,eAAe,a,+BAQjC,IAAD,EAoBgB3E,KAAKF,MAlBlBG,OACJkB,EAHC,EAGDA,UACAwC,EAJC,EAIDA,WACAC,EALC,EAKDA,SACApC,EANC,EAMDA,SACAC,EAPC,EAODA,IACAU,EARC,EAQDA,MACAC,EATC,EASDA,MACAC,EAVC,EAUDA,QACAC,EAXC,EAWDA,KACAE,EAZC,EAYDA,MACAE,EAbC,EAaDA,IACAO,EAdC,EAcDA,SACAE,EAfC,EAeDA,cACAC,EAhBC,EAgBDA,UACAC,EAjBC,EAiBDA,UACAC,EAlBC,EAkBDA,OACAC,EAnBC,EAmBDA,WACAM,EApBC,EAoBDA,WACJ,OACI,kBAAC,WAAD,KACI,yBAAK1D,MAAO,CAAEC,MAAO,SACjB,kBAACC,EAAA,EAAD,KACI,mDAGJ,kBAACC,EAAA,EAAD,CAAKC,QAAQ,OACTC,cAAc,SACdC,EAAG,EAAGC,EAAG,EACTC,QAAQ,oBAER,kBAACL,EAAA,EAAD,CAAKC,QAAQ,OACTgC,WAAW,SACX/B,cAAc,OACd,kBAACsE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,aAAaC,UAAW9D,KAElD,kBAAC2D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,cAAcC,UAAWtB,KAEnD,kBAACmB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,YAAYC,UAAWrB,MAIrD,kBAACtD,EAAA,EAAD,CAAKC,QAAQ,OACTgC,WAAW,SACX/B,cAAc,OACd,kBAACsE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,WAAWC,UAAWzD,KAEhD,kBAACsD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,MAAMC,UAAWxD,MAI/C,kBAACnB,EAAA,EAAD,CAAKC,QAAQ,OACTgC,WAAW,SACX/B,cAAc,OACd,kBAACsE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,QAAQC,UAAW9C,KAE7C,kBAAC2C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,QAAQC,UAAW7C,MAIjD,kBAAC0C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,UAAUC,UAAW5C,KAG/C,kBAAC/B,EAAA,EAAD,CAAKC,QAAQ,OACTgC,WAAW,SACX/B,cAAc,OAEd,kBAACsE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,OAAOC,UAAW3C,KAE5C,kBAACwC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,QAAQC,UAAWzC,KAE7C,kBAACsC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,MAAMC,UAAWvC,MAI/C,kBAACpC,EAAA,EAAD,CAAKC,QAAQ,OACTgC,WAAW,SACX/B,cAAc,OACd,kBAACsE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,WAAWC,UAAWhC,KAEhD,kBAAC6B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,gBAAgBC,UAAW9B,MAIzD,kBAAC7C,EAAA,EAAD,CAAKC,QAAQ,OACTgC,WAAW,SACX/B,cAAc,OACd,kBAACsE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,YAAYC,UAAW7B,KAEjD,kBAAC0B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,wBAAwBC,UAAW5B,MAIjE,kBAAC/C,EAAA,EAAD,CAAKC,QAAQ,OACTgC,WAAW,SACX/B,cAAc,OACd,kBAACsE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,gBAAgBC,UAAW3B,KAErD,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,aAAaC,UAAW1B,KAElD,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,QAAQ,cAAcC,UAAWpB,MAIvD,kBAACnC,EAAA,EAAD,CACIvB,MAAO,CAAEW,aAAc,IACvBE,QAAQ,YACRY,MAAM,UACNC,KAAK,qBACLC,QAAS9B,KAAKL,UALlB,e,GA1NaoC,aCEhBmD,E,2MACjB1C,MAAQ,CACJ2C,KAAM,EACNhE,UAAW,GACXwC,WAAY,GACZC,SAAU,GACVpC,SAAU,GACVC,IAAK,GACLU,MAAO,GACPC,MAAO,GACPC,QAAS,GACTC,KAAM,GACNE,MAAO,GACPE,IAAK,GACLO,SAAU,GACVE,cAAe,GACfC,UAAW,GACXC,UAAW,GACXC,OAAQ,GACRC,WAAY,GACZM,WAAY,I,EAGhB9D,SAAW,WAAO,IACNoF,EAAS,EAAK3C,MAAd2C,KACR,EAAKT,SAAS,CACVS,KAAMA,EAAO,K,EAKrBjD,SAAW,WAAO,IACNiD,EAAS,EAAK3C,MAAd2C,KACR,EAAKT,SAAS,CACVS,KAAMA,EAAO,K,EAIrBjF,aAAe,SAAAkF,GAAK,OAAI,SAAAxF,GACpB,EAAK8E,SAAL,eACKU,EAAQxF,EAAEyF,OAAOrC,U,mFAKtB,IAAIsC,EAASC,OAAOC,SAASF,OAEzBG,EADS,IAAIC,gBAAgBJ,GAChBK,IAAI,OAET,OAAPF,QAAsBG,GAAPH,EAChBnB,QAAQC,IAAI,cAEZD,QAAQC,IAAIkB,GACZzF,KAAK6F,SAASJ,M,+BAIbK,GAEL,IAAIpC,EAAO,GACX1E,EACK8E,WACAC,IAAI,cAAgB+B,GACpB5B,KAAK,SAAS,SAAUE,GAErBA,EAAS2B,SAAQ,SAAUC,GACvB,IAAIC,EAAKD,EAAMF,IACX9C,EAAQgD,EAAM3B,MAClBC,QAAQC,IAAI0B,EAAIjD,GAChBU,EAAKuC,GAAMjD,KAGfsB,QAAQC,IAAIb,GACZc,MAAM,cAAe0B,KAAKC,UAAUzC,OAE5C1D,KAAK0E,SAAS,CAAChB,W,+BAGT,IACEyB,EAASnF,KAAKwC,MAAd2C,KADH,EAuBDnF,KAAKwC,MAEHvC,EAAS,CACXkB,UA1BC,EAGDA,UAwBAwC,WA3BC,EAIDA,WAwBAC,SA5BC,EAKDA,SAwBApC,SA7BC,EAMDA,SAwBAC,IA9BC,EAODA,IAwBAU,MA/BC,EASDA,MAuBAC,MAhCC,EAUDA,MAuBAC,QAjCC,EAWDA,QAuBAC,KAlCC,EAYDA,KAuBAE,MAnCC,EAaDA,MAuBAE,IApCC,EAcDA,IAuBAO,SArCC,EAgBDA,SAsBAE,cAtCC,EAiBDA,cAsBAC,UAvCC,EAkBDA,UAsBAC,UAxCC,EAmBDA,UAsBAC,OAzCC,EAoBDA,OAsBAC,WA1CC,EAqBDA,WAsBAM,WA3CC,EAsBDA,YAwBJ,OAAQsB,GACJ,KAAK,EACD,OACI,kBAAC,EAAD,CACIpF,SAAUC,KAAKD,SACfG,aAAcF,KAAKE,aACnBD,OAAQA,IAIpB,KAAK,EACD,OACI,kBAAC,EAAD,CACIF,SAAUC,KAAKD,SACfmC,SAAUlC,KAAKkC,SACfhC,aAAcF,KAAKE,aACnBD,OAAQA,IAGpB,KAAK,EACD,OACI,kBAAC,EAAD,CACIF,SAAUC,KAAKD,SACfmC,SAAUlC,KAAKkC,SACfhC,aAAcF,KAAKE,aACnBD,OAAQA,IAIpB,KAAK,EACD,OACI,kBAAC,EAAD,CACIF,SAAUC,KAAKD,SACfmC,SAAUlC,KAAKkC,SACfhC,aAAcF,KAAKE,aACnBD,OAAQA,IAKxB,OACI,kC,GArK0B8B,aCHjBqE,E,iLAEjB,OACE,kBAAC,EAAD,U,GAH2BrE,aCSbsE,QACW,cAA7Bd,OAAOC,SAASc,UAEe,UAA7Bf,OAAOC,SAASc,UAEhBf,OAAOC,SAASc,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3C,MAAK,SAAA4C,GACjCA,EAAaC,iB","file":"static/js/main.e4b12867.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nconst config = {\r\n    apiKey: 'AIzaSyDpqJBIyrttzMP0CCRv0J39O2VA_xr6KTA',\r\n    authDomain: 'corelogic-dealer-management.firebaseapp.com',\r\n    databaseURL: 'https://corelogic-dealer-management.firebaseio.com',\r\n    projectId: 'corelogic-dealer-management',\r\n    storageBucket: 'corelogic-dealer-management.appspot.com',\r\n    messagingSenderId: '188666342814',\r\n    appId:'1:188666342814:web:e1f2de7ec67713cdf77a8f'\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const firestore = firebase.firestore();\r\nexport default firebase;\r\n","import React, { Component, Fragment, useState } from \"react\";\r\nimport { Button, TextField, Container, Box } from \"@material-ui/core\";\r\nimport firebase from '../configs/firebase'\r\n\r\nexport default class FormPersonalDetails extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    };\r\n\r\n    render() {\r\n\r\n        const { values, handleChange } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div style={{ width: '100%' }}>\r\n                    <Container >\r\n                        <h3>Personal Information</h3>\r\n                    </Container>\r\n\r\n                    <Box display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        p={1} m={1}\r\n                        bgcolor=\"background.paper\">\r\n                        <TextField\r\n                            required\r\n                            style={{ marginBottom: 10 }}\r\n                            label=\"First Name\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('firstname')}\r\n                            defaultValue={values.firstname}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n                        <TextField\r\n                            style={{ marginBottom: 10 }}\r\n                            label=\"Middle Name\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('middlename')}\r\n                            defaultValue={values.firstname}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n                        <TextField\r\n                            required\r\n                            style={{ marginBottom: 10 }}\r\n                            label=\"Last Name\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('lastname')}\r\n                            defaultValue={values.firstname}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n                        <TextField\r\n                            required\r\n                            style={{ marginBottom: 10 }}\r\n                            id=\"date\"\r\n                            type=\"date\"\r\n                            label=\"Birthday\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('birthday')}\r\n                            defaultValue={values.birthday}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            required\r\n                            style={{ marginBottom: 10 }}\r\n                            label=\"SSN\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('ssn')}\r\n                            defaultValue={values.ssn}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n                        <Button\r\n                            disabled={!values.ssn}\r\n                            style={{ marginBottom: 10 }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            href=\"#contained-buttons\"\r\n                            onClick={this.continue} >Next</Button>\r\n                    </Box>\r\n\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment, useState } from \"react\";\r\nimport { Button, TextField, Container, Box } from \"@material-ui/core\";\r\n\r\n\r\nexport default class FormContactDetails extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    };\r\n    previous = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    };\r\n\r\n    render() {\r\n\r\n        const { values, handleChange } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div style={{ width: '100%' }}>\r\n                    <Container >\r\n                        <h3>Contact Information</h3>\r\n                    </Container>\r\n                    <Box display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        p={1} m={1}\r\n                        bgcolor=\"background.paper\">\r\n                        <TextField\r\n                        required\r\n                            type='email'\r\n                            style={{ marginBottom: 10 }}\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('email')}\r\n                            defaultValue={values.email}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n                        <TextField\r\n                        required\r\n                            type=\"tel\"\r\n                            style={{ marginBottom: 10 }}\r\n                            label=\"Phone Number\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('phone')}\r\n                            defaultValue={values.phone}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n                        <TextField\r\n                            style={{ marginBottom: 10 }}\r\n                            label=\"Address\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('address')}\r\n                            defaultValue={values.address}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n                        <TextField\r\n                            style={{ marginBottom: 10 }}\r\n                            label=\"City\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('city')}\r\n                            defaultValue={values.city}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n                        <Box\r\n                            display=\"flex\"\r\n                            alignItems='center'\r\n                            flexDirection=\"row\">\r\n                            <TextField\r\n                                style={{ marginBottom: 10 }}\r\n                                label=\"State\"\r\n                                variant=\"outlined\"\r\n                                onChange={handleChange('state')}\r\n                                defaultValue={values.state}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }} />\r\n                            <TextField\r\n                                style={{ marginBottom: 10, marginLeft: 20 }}\r\n                                label=\"Zip\"\r\n                                variant=\"outlined\"\r\n                                onChange={handleChange('zip')}\r\n                                defaultValue={values.zip}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }} />\r\n                        </Box>\r\n\r\n                        <Box\r\n                            display=\"flex\"\r\n                            alignContent=\"center\"\r\n                            flexDirection=\"row\">\r\n                            <Button\r\n                                style={{ marginBottom: 10 }}\r\n                                variant=\"contained\"\r\n                                color=\"default\"\r\n                                href=\"#contained-buttons\"\r\n                                onClick={this.previous} >Back</Button>\r\n                            <Button\r\n                            disabled={!values.phone}\r\n                                style={{ marginBottom: 10 }}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                href=\"#contained-buttons\"\r\n                                onClick={this.continue} >Next</Button>\r\n                        </Box>\r\n\r\n                    </Box>\r\n\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment, useState } from \"react\";\r\nimport { Button, TextField, Container, Box, Select, MenuItem } from \"@material-ui/core\";\r\n\r\n\r\nexport default class FormEmployerDetails extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    };\r\n    previous = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    };\r\n\r\n    render() {\r\n\r\n        const { values, handleChange } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div style={{ width: '100%' }}>\r\n                    <Container >\r\n                        <h3>Employement Information</h3>\r\n                    </Container>\r\n\r\n                    <Box display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        p={1} m={1}\r\n                        bgcolor=\"background.paper\">\r\n\r\n                        <Box\r\n                            display=\"flex\"\r\n                            alignItems='center'\r\n                            flexDirection=\"row\">\r\n                            {/* <TextField\r\n                                style={{ marginBottom: 10 }}\r\n                                label=\"Employement Status\"\r\n                                variant=\"outlined\"\r\n                                onChange={handleChange('employed')}\r\n                                defaultValue={values.employed}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }} /> */}\r\n\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                variant=\"outlined\"\r\n                                style={{ minWidth: 200 }}\r\n                                value={values.employed}\r\n                                onChange={handleChange('employed')}\r\n                            >\r\n                                <MenuItem value=\"employed\">Employed</MenuItem>\r\n                                <MenuItem value=\"self employed\">Self Employed / 1099</MenuItem>\r\n                                <MenuItem value=\"retired\">Retired</MenuItem>\r\n                                <MenuItem value=\"other\">Other</MenuItem>\r\n                            </Select>\r\n\r\n                            <TextField\r\n                                style={{ marginBottom: 10, marginLeft: 20 }}\r\n                                label=\"Employer Name\"\r\n                                variant=\"outlined\"\r\n                                onChange={handleChange('employer_name')}\r\n                                defaultValue={values.employer_name}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }} />\r\n                        </Box>\r\n\r\n                        <TextField\r\n                            type='text'\r\n                            style={{ marginBottom: 10 }}\r\n                            label=\"Job Title\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('job_title')}\r\n                            defaultValue={values.job_title}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n                        <TextField\r\n                            type=\"tel\"\r\n                            style={{ marginBottom: 10 }}\r\n                            label=\"Phone Number\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('emp_phone')}\r\n                            defaultValue={values.emp_phone}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n                        <TextField\r\n                            style={{ marginBottom: 10 }}\r\n                            label=\"Annual Income\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('income')}\r\n                            defaultValue={values.income}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n\r\n                        <TextField\r\n                            style={{ marginBottom: 10 }}\r\n                            id=\"date\"\r\n                            type=\"date\"\r\n                            label=\"Start Date\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('start_date')}\r\n                            defaultValue={values.start_date}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                        {/* <Link */}\r\n\r\n                        <Box\r\n                            display=\"flex\"\r\n                            alignContent=\"center\"\r\n                            flexDirection=\"row\">\r\n                            <Button\r\n                                style={{ marginBottom: 10 }}\r\n                                variant=\"contained\"\r\n                                color=\"default\"\r\n                                href=\"#contained-buttons\"\r\n                                onClick={this.previous} >Back</Button>\r\n                            <Button\r\n                                style={{ marginBottom: 10 }}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                href=\"#contained-buttons\"\r\n                                onClick={this.continue} >Next</Button>\r\n                        </Box>\r\n\r\n                    </Box>\r\n\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment, useState } from \"react\";\r\nimport { Button, TextField, Container, Box, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport firebase from '../configs/firebase';\r\n\r\nexport default class Confirm extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        // console.log()\r\n        //fire up\r\n        // this.props.nextStep();\r\n        this.get_connection(this.props.values)\r\n    };\r\n    componentDidMount() {\r\n        // this.get_connection();\r\n    }\r\n\r\n    get_connection(data) {\r\n        // const {data} =this.state;\r\n        // console.log(data.firstname);\r\n\r\n        var firstname = data.firstname;\r\n        var middlename = data.middlename;\r\n        var lastname = data.lastname;\r\n        var birthday = data.birthday;\r\n        var ssn = data.ssn;\r\n        var email = data.email;\r\n        var phone = data.phone;\r\n        var address = data.address;\r\n        var city = data.city;\r\n        var state = data.state;\r\n        var zip = data.zip;\r\n        var employed = data.employed;\r\n        var employer_name = data.employer_name;\r\n        var job_title = data.job_title;\r\n        var emp_phone = data.emp_phone;\r\n        var income = data.income;\r\n        var start_date = data.start_date;\r\n        var income_ext = data.income_ext;\r\n\r\n        firebase\r\n            .database()\r\n            .ref('dealer_web/')\r\n            .orderByChild('ssn')\r\n            .equalTo(ssn)\r\n            .once('value')\r\n            .then(snapshot => {\r\n                if (snapshot.val()) {\r\n                    console.log('data exist');\r\n                    // this.state.showSuccessFrame = false;\r\n                    alert('User available');\r\n                    // this.state.authenticated = false;\r\n                } else {\r\n                    // this.state.showSuccessFrame = false;\r\n                    console.log('Adding user to fire');\r\n                    firebase\r\n                        .database()\r\n                        .ref('dealer_web/')\r\n                        .push({\r\n                            firstname,\r\n                            middlename,\r\n                            lastname,\r\n                            birthday,\r\n                            ssn,\r\n                            email,\r\n                            phone,\r\n                            address,\r\n                            city,\r\n                            state,\r\n                            zip,\r\n                            employed,\r\n                            employer_name,\r\n                            job_title,\r\n                            emp_phone,\r\n                            income,\r\n                            start_date,\r\n                            income_ext,\r\n                        })\r\n                        .then(data => {\r\n                            console.log(data);\r\n                            let newState = {\r\n                                authenticated: true,\r\n                            };\r\n                            this.setState(newState);\r\n                            alert('dealer added successfully');\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error);\r\n                            //error callback\r\n                            alert('dealer adding failed');\r\n                            let newState = {\r\n                                authenticated: false,\r\n                            };\r\n                            this.setState(newState);\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { values: {\r\n            firstname,\r\n            middlename,\r\n            lastname,\r\n            birthday,\r\n            ssn,\r\n            email,\r\n            phone,\r\n            address,\r\n            city,\r\n            state,\r\n            zip,\r\n            employed,\r\n            employer_name,\r\n            job_title,\r\n            emp_phone,\r\n            income,\r\n            start_date,\r\n            income_ext } } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div style={{ width: '100%' }}>\r\n                    <Container >\r\n                        <h3>Review Information</h3>\r\n                    </Container>\r\n\r\n                    <Box display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        p={1} m={1}\r\n                        bgcolor=\"background.paper\">\r\n\r\n                        <Box display=\"flex\"\r\n                            alignItems='center'\r\n                            flexDirection=\"row\">\r\n                            <ListItem>\r\n                                <ListItemText primary=\"First Name\" secondary={firstname} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Middle Name\" secondary={middlename} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Last Name\" secondary={lastname} />\r\n                            </ListItem>\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\"\r\n                            alignItems='center'\r\n                            flexDirection=\"row\">\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Birthday\" secondary={birthday} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"SSN\" secondary={ssn} />\r\n                            </ListItem>\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\"\r\n                            alignItems='center'\r\n                            flexDirection=\"row\">\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Email\" secondary={email} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"phone\" secondary={phone} />\r\n                            </ListItem>\r\n                        </Box>\r\n\r\n                        <ListItem>\r\n                            <ListItemText primary=\"Address\" secondary={address} />\r\n                        </ListItem>\r\n\r\n                        <Box display=\"flex\"\r\n                            alignItems='center'\r\n                            flexDirection=\"row\">\r\n\r\n                            <ListItem>\r\n                                <ListItemText primary=\"City\" secondary={city} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"State\" secondary={state} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Zip\" secondary={zip} />\r\n                            </ListItem>\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\"\r\n                            alignItems='center'\r\n                            flexDirection=\"row\">\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Employed\" secondary={employed} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Employer Name\" secondary={employer_name} />\r\n                            </ListItem>\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\"\r\n                            alignItems='center'\r\n                            flexDirection=\"row\">\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Job Title\" secondary={job_title} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Employer Phone Number\" secondary={emp_phone} />\r\n                            </ListItem>\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\"\r\n                            alignItems='center'\r\n                            flexDirection=\"row\">\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Annual Income\" secondary={income} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Start Date\" secondary={start_date} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Income Ext*\" secondary={income_ext} />\r\n                            </ListItem>\r\n                        </Box>\r\n\r\n                        <Button\r\n                            style={{ marginBottom: 10 }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            href=\"#contained-buttons\"\r\n                            onClick={this.continue} >Save</Button>\r\n                    </Box>\r\n\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport FormPersonalDetails from './FormPersonalDetails';\r\nimport FormContactDetails from './FormContactDetails';\r\nimport FormEmployerDetails from './FormEmployerDetails';\r\nimport Confirm from './Confirm';\r\nimport firebase from '../configs/firebase';\r\nexport default class UserForm extends Component {\r\n    state = {\r\n        step: 1,\r\n        firstname: \"\",\r\n        middlename: \"\",\r\n        lastname: \"\",\r\n        birthday: '',\r\n        ssn: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        employed: \"\",\r\n        employer_name: \"\",\r\n        job_title: \"\",\r\n        emp_phone: \"\",\r\n        income: \"\",\r\n        start_date: \"\",\r\n        income_ext: \"\"\r\n    };\r\n\r\n    nextStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n        // console.log(this.state);\r\n    };\r\n\r\n    prevStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    };\r\n\r\n    handleChange = input => e => {\r\n        this.setState({\r\n            [input]: e.target.value\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        let search = window.location.search;\r\n        let params = new URLSearchParams(search);\r\n        let foo = params.get('key');\r\n\r\n        if (!foo == null || foo == undefined) {\r\n            console.log(\"undefined\")\r\n        } else {\r\n            console.log(foo);\r\n            this.get_data(foo);\r\n        }\r\n    }\r\n\r\n    get_data(key) {\r\n\r\n        var data = {}\r\n        firebase\r\n            .database()\r\n            .ref('dealer_web/' + key)\r\n            .once(\"value\", function (snapshot) {\r\n                // console.log(snapshot.val())\r\n                snapshot.forEach(function (child) {\r\n                    var el = child.key;\r\n                    var value = child.val();\r\n                    console.log(el, value)\r\n                    data[el] = value;\r\n\r\n                });\r\n                console.log(data)\r\n                alert('Your Data: '+ JSON.stringify(data))\r\n            });\r\n        this.setState({data});\r\n    }\r\n\r\n    render() {\r\n        const { step } = this.state;\r\n        const {\r\n            firstname,\r\n            middlename,\r\n            lastname,\r\n            birthday,\r\n            ssn,\r\n\r\n            email,\r\n            phone,\r\n            address,\r\n            city,\r\n            state,\r\n            zip,\r\n\r\n            employed,\r\n            employer_name,\r\n            job_title,\r\n            emp_phone,\r\n            income,\r\n            start_date,\r\n            income_ext\r\n        } = this.state;\r\n\r\n        const values = {\r\n            firstname,\r\n            middlename,\r\n            lastname,\r\n            birthday,\r\n            ssn,\r\n            email,\r\n            phone,\r\n            address,\r\n            city,\r\n            state,\r\n            zip,\r\n            employed,\r\n            employer_name,\r\n            job_title,\r\n            emp_phone,\r\n            income,\r\n            start_date,\r\n            income_ext\r\n        };\r\n\r\n        switch (step) {\r\n            case 1:\r\n                return (\r\n                    <FormPersonalDetails\r\n                        nextStep={this.nextStep}\r\n                        handleChange={this.handleChange}\r\n                        values={values}\r\n                    />\r\n                )\r\n\r\n            case 2:\r\n                return (\r\n                    <FormContactDetails\r\n                        nextStep={this.nextStep}\r\n                        prevStep={this.prevStep}\r\n                        handleChange={this.handleChange}\r\n                        values={values}\r\n                    />\r\n                )\r\n            case 3:\r\n                return (\r\n                    <FormEmployerDetails\r\n                        nextStep={this.nextStep}\r\n                        prevStep={this.prevStep}\r\n                        handleChange={this.handleChange}\r\n                        values={values}\r\n                    />\r\n                )\r\n\r\n            case 4:\r\n                return (\r\n                    <Confirm\r\n                        nextStep={this.nextStep}\r\n                        prevStep={this.prevStep}\r\n                        handleChange={this.handleChange}\r\n                        values={values}\r\n                    />\r\n                )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport UserForm from './components/UserForm'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <UserForm />\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}